<module>
<baseinfo>
name=畅言评论模块
team=畅言团队
time=2015-10-20
email=changyan@sohu-inc.com
url=http://changyan.kuaizhan.com
hash=a202ee8bb748e7ca1381da1c95c93734
indexname=0
indexurl=
ismember=0
autosetup=1
autodel=1
lang=gb2312
moduletype=soft
</baseinfo>
<systemfile>
<menustring>
PG06dG9wIG5hbWU9J7Op0dTGwMLbJyBkaXNwbGF5PSdibG9jayc+DQo8bTppdGVtIG5hbWU9J7Op0dTEo7/pJyBsaW5rPSdjaGFuZ3lhbl9tYWluLnBocCcgcmFuaz0nc3lzX0ZlZWRiYWNrJyB0YXJnZXQ9J21haW4nLz4NCjxtOml0ZW0gbmFtZT0nxsDC27ncwO0nIGxpbms9J2NoYW5neWFuX21haW4ucGhwP2RvcG9zdD1tYW5hZ2UnIHJhbms9J3N5c19GZWVkYmFjaycgdGFyZ2V0PSdtYWluJy8+DQo8bTppdGVtIG5hbWU9J8r9vt3Ns7zGJyBsaW5rPSdjaGFuZ3lhbl9tYWluLnBocD9kb3Bvc3Q9c3RhdCcgcmFuaz0nc3lzX0ZlZWRiYWNrJyB0YXJnZXQ9J21haW4nLz4NCjxtOml0ZW0gbmFtZT0ntbzI67W8s/YnIGxpbms9J2NoYW5neWFuX21haW4ucGhwP2RvcG9zdD1pbXBvcnQnIHJhbms9J3N5c19GZWVkYmFjaycgdGFyZ2V0PSdtYWluJy8+DQo8bTppdGVtIG5hbWU9J7Op0dTJ6NbDJyBsaW5rPSdjaGFuZ3lhbl9tYWluLnBocD9kb3Bvc3Q9c2V0dGluZycgcmFuaz0nc3lzX0ZlZWRiYWNrJyB0YXJnZXQ9J21haW4nLz4NCjwvbTp0b3A+
</menustring>
<readme>
PGRpdiBjbGFzcz0iY29udGVudCI+DQoJPGRpdiBjbGFzcz0idGl0bGUiPrjFyvY8L2Rpdj4NCgk8cCBjbGFzcz0ic3RlcF90aXRsZSI+MaGis6nR1MrHyrLDtKO/PC9wPg0KCTxwIGNsYXNzPSJzdGVwX2NvbnRlbnQiPrOp0dTKx9K1xNrB7M/ItcTJ57vhu6/GwMLbz7XNs6Os1qez1lBDus3SxravtsvBvdbWvdPI67e9yr2jrM6qzfjVvszhuanBy9K71tbIq9DCtcTGwMLbt73KvaGjs6nR1NO109C24NbWs6PTw9XLusW1x8K8oaLI/dbYyfO6y7v61sahosq1yrG1xMr9vt3Ns7zGoaK/7L3dyv2+3bW8s/ahosirw+bWp7PW0sa2r7bLtcjB7M/IuabE3KGjs+S31sL61+PBy7Wxx7C497TzzfjVvrbU09rTw7untcfCvKGixsDC26Git9bP7SChosnzusu1yLe9w+a1xNDox/OhozwvcD4NCgk8cCBjbGFzcz0ic3RlcF90aXRsZSI+MqGis6nR1Mjnus6xo9akyv2+3bCyyKujvzwvcD4NCgk8cCBjbGFzcz0ic3RlcF9jb250ZW50Ij7N+NW+vdPI67Op0dS686Osy+TIu8bAwtvK/b7dsvrJ+tTas6nR1Lf+zvHG96Ostau688yozOG5qb/svd3K/b7dtbyz9tPrv6q3xWFwab3Tv9q1yLe9yr2xo9XPzfjVvsq1yrG78cihsb7Vvsr9vt2ho82syrGjrLOp0dTU2s341b7Q6NKqyrGjrL/J0tTHqbapsaPD3NCt0umjrLGj1c/L+dPQyv2+3bXEsLLIq9DUoaM8L3A+DQoJPHAgY2xhc3M9InN0ZXBfdGl0bGUiPjOhorOp0dTI57rOsaPWpMnzusuwssiro788L3A+DQoJPHAgY2xhc3M9InN0ZXBfY29udGVudCI+s6nR1NTa0rXE2sLKz8jKtc/WyP3W2Mnzusu7+tbGoaO1scbAwtvK/b7dsvrJ+rrzo6zK18/Ivq25/cvRuvzArLv4uf3Cy8+1zbOjrLfAueDLrqGit8DArLv4oaK3wLnjuOaju8i7uvO+rbn9y9G6/Neo0rW1xMjLuaTJ87rLzcW206Os0c+48cflwO3V/tbOw/S40NDU0MXPoqOszazKsc6lvfu0yr/iu+G4+b7dufq80tX+st/NqNaqo6zKtcqxuPzQwqO71+6688rHzfjVvrXE19TW98nzusujrMv509CzqdHUus/X98341b62vNPQ16jK9LXEudzA7brzzKijrLncwO3L+dPQsb7N+MbAwtujrLy0yrm+rbn9y9G6/Mnzusu1xMbAwtujrM341b7SstPQyKjP3tTZtM7J87rLoaPN+NW+ttSxvtW+xsDC29O109DN6sirtcS53MDto6y/ydLUyejWw8/It6K688nz0+vPyMnzuvO3orXItuDW1snzusvQzsq9oaM8L3A+DQoJPHAgY2xhc3M9InN0ZXBfdGl0bGUiPjShosjnus6xo9aks6nR1Lf+zvG1xLPW0PjQ1KOsv8m/v9DUo788L3A+DQoJPHAgY2xhc3M9InN0ZXBfY29udGVudCI+s6nR1MbAwtujrNf3zqrL0br8zfjGwMLbz7XNs7XEyf28trDmo6yxvsntvs3U2s6qy9G6/Lf+zvGjrLL6xre1xLCyyKvT687ItqjQ1M7j07nWw9LJoaPNrMqxo6yzqdHUv8nS1NPrus/X98341b7HqbapsLLIq9Ct0umjrLGj1c+6z9f3zfjVvrCyyKvOyLao0NTQ6MfzoaM8L3A+DQoJPHAgY2xhc3M9InN0ZXBfdGl0bGUiPjWhorOp0dTKx8Pit9G1xMLwo788L3A+DQoJPHAgY2xhc3M9InN0ZXBfY29udGVudCI+s6nR1Nf3zqrQwtK7tPq1xMbAwtvPtc2zo6zD4rfRzqq547Tzus/X98341b7M4bmpsLLIq7/Jv7+1xLf+zvGho7Wrs6nR1LGjwfS/ycTctcTU9ta1t/7O8crVt9HIqMD7oaM8L3A+DQoJPHAgY2xhc3M9InN0ZXBfdGl0bGUiPjahos341b7I57rOu/HIocbAwtvK/b7do788L3A+DQoJPHAgY2xhc3M9InN0ZXBfY29udGVudCI+y/nT0LrP1/fN+NW+o6zU2rOp0dS53MDtuvPMqKOstrzT0NK7vPzK/b7dtbyz9rmmxNyjrM341b6/ydLUuPm+3dDo0qrRodTxtbyz9sr9vt2ho82syrGjrLOp0dTM4bmpv6q3xb3Tv9qjrML61+PN+NW+uPy24NSqu6/K/b7dtbyz9tDox/Oho8HtzeKjrLbU09rN+NW+1q7HsLXExsDC28r9vt3Ssr/J0tTNqLn9s6nR1LW8yOujrMbAwtvTwLK7tqrKp6GjPC9wPg0KCTxwIGNsYXNzPSJzdGVwX3RpdGxlIj43oaLN+NW+1cu6xcjnus7T67Op0dS94brPo788L3A+DQoJPHAgY2xhc3M9InN0ZXBfY29udGVudCI+xL/HsLOp0dTM4bmptaW147XHwry3vbC4xNy5u73ivva0y87KzOKjrL7fzOXH67LOvPs8YSBocmVmPSJhLXNzby5odG1sIj61pbXjtcfCvDwvYT6hozwvcD4NCgk8cCBjbGFzcz0ic3RlcF90aXRsZSI+OKGiyrLDtMrHs6nR1HZpcNXLusWjrHZpcNXLusXI57rOyerH66O/PC9wPg0KCTxwIGNsYXNzPSJzdGVwX2NvbnRlbnQiPlZJUNXLusWjrNO109C31sa1tcC53MDt0+vNs7zGt9bO9qGiudzA7dSxzOXPtcno1sOhotK7ttTSu7y8yvW/zbf+tci24NbWuabE3NPrt/7O8aOsz+rH6cfrwarPtbOp0dS/zbf+oaM8L3A+DQoJPHAgY2xhc3M9InN0ZXBfdGl0bGUiPjmhorOp0dTKx7fx1qez1rbgxrW1wKOstuDVy7rFudzA7aO/PC9wPg0KCTxwIGNsYXNzPSJzdGVwX2NvbnRlbnQiPs2ouf3J6sfrs6nR1HZpcNXLusWjrLvxyKG24Ma1tcCjrLbg1cu6xbncwO23/s7xo6zI59PQ0OjSqsfrwarPtb/Nt/6hozwvcD4NCgk8cCBjbGFzcz0ic3RlcF90aXRsZSI+MTChosjnus652LHVxsDC2zwvcD4NCgk8cCBjbGFzcz0ic3RlcF9jb250ZW50Ij6zqdHU1qez1rnYsdW1pcaqzsTVwsbAwtu1xLmmxNyhozwvcD4NCjwvZGl2Pg==
</readme>
<setupsql40>
RFJPUCBUQUJMRSBJRiBFWElTVFMgYCNAX19wbHVzX2NoYW5neWFuX3NldHRpbmdgOw0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgYCNAX19wbHVzX2NoYW5neWFuX3NldHRpbmdgICgNCiAgYHNrZXlgIHZhcmNoYXIoMjU1KSBOT1QgTlVMTCBERUZBVUxUICcnLA0KICBgc3ZhbHVlYCB0ZXh0IE5PVCBOVUxMLA0KICBgc3RpbWVgIGludCgxMCkgTk9UIE5VTEwsDQogIFBSSU1BUlkgS0VZIChgc2tleWApDQopIFRZUEU9TXlJU0FNOw0KSU5TRVJUIElOVE8gYCNAX19wbHVzX2NoYW5neWFuX3NldHRpbmdgIChgc2tleWAsIGBzdmFsdWVgLCBgc3RpbWVgKSBWQUxVRVMNCignYXBwaWQnLCAnMCcsIDApLA0KKCdpZCcsICcwJywgMCksDQooJ2lzdl9pZCcsICcwJywgMCksDQooJ3VzZXInLCAnMCcsIDApLA0KKCdwd2QnLCAnMCcsIDApOw==
</setupsql40>
<delsql>
RFJPUCBUQUJMRSBJRiBFWElTVFMgYCNAX19wbHVzX2NoYW5neWFuX3NldHRpbmdgOw0KRFJPUCBUQUJMRSBJRiBFWElTVFMgYCNAX19wbHVzX2NoYW5neWFuX2ltcG9ydGlkc2A7DQpEUk9QIFRBQkxFIElGIEVYSVNUUyBgI0BfX3BsdXNfY2hhbmd5YW5faW5zZXJ0aWRzYDs=
</delsql>
<setup>

</setup>
<uninstall>

</uninstall>
<oldfilelist>
changyan_main.php
../include/helpers/changyan.helper.php
../include/taglib/changyan.lib.php
</oldfilelist>
</systemfile>
<modulefiles>
<file type='file' name='changyan_main.php'>

</file>
<file type='file' name='../include/helpers/changyan.helper.php'>

</file>
<file type='file' name='../include/taglib/changyan.lib.php'>
PD9waHAgICBpZighZGVmaW5lZCgnREVERUlOQycpKSBleGl0KCdSZXF1ZXN0IEVycm9yIScpOw0KDQpoZWxwZXIoJ2NoYW5neWFuJyk7DQpoZWxwZXIoJ2NhY2hlJyk7DQokR0xPQkFMU1snY2hhbmd5YW5fY291bnRfanMnXSA9IGlzc2V0KCRHTE9CQUxTWydjaGFuZ3lhbl9jb3VudF9qcyddKT8gJEdMT0JBTFNbJ2NoYW5neWFuX2NvdW50X2pzJ10gOiBGQUxTRTsNCmZ1bmN0aW9uIGxpYl9jaGFuZ3lhbigmJGN0YWcsJiRyZWZPYmopDQp7DQogICAgZ2xvYmFsICRkc3FsLCAkZW52czsNCiAgICAvL8r00NS0psDtDQogICAgJHR5cGUgPSBlbXB0eSgkdHlwZSk/ICdjb2RlJyA6ICR0eXBlOw0KICAgICRjbGFzcyA9IGVtcHR5KCRjbGFzcyk/ICdfREVERUNZJyA6ICRjbGFzczsNCiAgICAkdmVyc2lvbiA9IENIQU5HWUFOX1ZFUjsNCiAgICAkYXR0bGlzdD0idHlwZXxjb2RlLGNvbmZpZ3wsY2xhc3N8X0RFREVDWSxzdHlsZXwiOw0KICAgIEZpbGxBdHRzRGVmYXVsdCgkY3RhZy0+Q0F0dHJpYnV0ZS0+SXRlbXMsJGF0dGxpc3QpOw0KICAgIGV4dHJhY3QoJGN0YWctPkNBdHRyaWJ1dGUtPkl0ZW1zLCBFWFRSX1NLSVApOw0KICAgIA0KICAgICRyZXZhbD0iIjsNCiAgICANCiAgICBpZiggISRkc3FsLT5Jc1RhYmxlKCIjQF9fcGx1c19jaGFuZ3lhbl9zZXR0aW5nIikgKSByZXR1cm4gJ8O7sLLXsLOp0dTEo7/pJzsNCiAgICANCiAgICAkY2xpZW50X2lkPWNoYW5neWFuX2dldF9zZXR0aW5nKCdhcHBpZCcpOw0KICAgIGlmKGVtcHR5KCRjbGllbnRfaWQpKSByZXR1cm4gJ8nQzrTXorLhs6nR1NXKusWjrMfrtb2688yo16Ky4Sc7DQoNCiAgICBpZigkdHlwZT09J2NvZGUnIE9SICR0eXBlPT0nY29kZTInKQ0KICAgIHsNCiAgICAgICAgJHJldmFsIC49ICI8ZGl2IGNsYXNzPSd7JGNsYXNzfScgc3R5bGU9J3skc3R5bGV9JyBkYXRhLXZlcmlvbj0neyR2ZXJzaW9ufSc+IjsNCiAgICAgICAgJHByZWZpeCA9ICdjaGFuZ3lhbic7DQogICAgICAgICRrZXkgPSAnY29kZSc7DQogICAgICAgICRyb3cgPSBHZXRDYWNoZSgkcHJlZml4LCAka2V5KTsNCg0KICAgICAgICBpZighaXNfYXJyYXkoJHJvdykpDQogICAgICAgIHsNCiAgICAgICAgICAgICRhcHBpZD1jaGFuZ3lhbl9nZXRfc2V0dGluZygnYXBwaWQnKTsNCiAgICAgICAgICAgICR1c2VyPWNoYW5neWFuX2dldF9zZXR0aW5nKCd1c2VyJyk7DQogICAgICAgICAgICAkc2lnbj1jaGFuZ3lhbl9nZW5fc2lnbigkdXNlcik7DQogICAgICAgICAgICAkcmVzdWx0ID0gY2hhbmd5YW5fZ2V0Y29kZShDSEFOR1lBTl9DTElFTlRfSUQsICR1c2VyLCBmYWxzZSwgJHNpZ24sICRhcHBpZCk7DQogICAgICAgICAgICAkcm93WydyZXZhbCddID0gaHRtbHNwZWNpYWxjaGFycygkcmVzdWx0Wydjb2RlJ10pOw0KICAgICAgICAgICAgU2V0Q2FjaGUoJHByZWZpeCwgJGtleSwgJHJvdywgNjAqNjAqMSk7DQogICAgICAgIH0NCiAgICAgICAgaWYoIWVtcHR5KCRjb25maWcpKQ0KICAgICAgICB7DQogICAgICAgICAgICAkY29uZmlnX2FyciA9IGFycmF5KCk7DQogICAgICAgICAgICAkY29uZmlncyA9IGV4cGxvZGUoJywnLCAkY29uZmlnKTsNCiAgICAgICAgICAgIGlmKGNvdW50KCRjb25maWdzKT4wKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIGZvcmVhY2goJGNvbmZpZ3MgYXMgJGMpIHsNCiAgICAgICAgICAgICAgICAgICAgJGl0ZW0gPSBleHBsb2RlKCc6JywgJGMpOw0KICAgICAgICAgICAgICAgICAgICAkY29uZmlnX2FyclskaXRlbVswXV0gPSAkaXRlbVsxXTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICAkY29uZmlnX3N0ciA9IGpzb25fZW5jb2RlKCRjb25maWdfYXJyKTsNCiAgICAgICAgICAgICRyZXZhbCAuPSA8PDxFT1QNCjxzY3JpcHQ+DQogICAgdmFyX2NvbmZpZz17JGNvbmZpZ19zdHJ9Ow0KPC9zY3JpcHQ+DQpFT1Q7DQogICAgICAgIH0NCiAgICAgICAgJHJldmFsIC49IGh0bWxzcGVjaWFsY2hhcnNfZGVjb2RlKCRyb3dbJ3JldmFsJ10pOw0KICAgICAgICAkcmV2YWw9c3RyX3JlcGxhY2UoImlkPSdTT0hVQ1MnIiwgImlkPSdTT0hVQ1MnIHNpZD0neyRyZWZPYmotPkFyY0lEfSciLCAkcmV2YWwpOw0KICAgICAgICBpZigkdHlwZT09J2NvZGUyJykgJHJldmFsPXByZWdfcmVwbGFjZSgiI3dpbmRvdy5TQ1NfTk9fSUZSQU1FWyBdPz1bIF0/dHJ1ZTsjaSIsICIiLCAkcmV2YWwpOw0KICAgICAgICAkcmV2YWw9c3RyX3JlcGxhY2UoIjxzY3JpcHQ+IiwgIjwvZGl2PjxzY3JpcHQ+IiwgJHJldmFsKTsNCiAgICB9IGVsc2VpZigkdHlwZT09J2NvdW50Jykgew0KICAgICAgICBpZighJEdMT0JBTFNbJ2NoYW5neWFuX2NvdW50X2pzJ10pICRyZXZhbC49IjxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiIHNyYz1cImh0dHA6Ly9hc3NldHMuY2hhbmd5YW4ua3VhaXpoYW4uY29tL3VwbG9hZC9wbHVnaW5zL3BsdWdpbnMuY291bnQuanNcIj48L3NjcmlwdD4iOw0KICAgICAgICAkcmV2YWwuPSI8YSBocmVmPVwiI1NPSFVDU1wiIGlkPVwiY2hhbmd5YW5fY291bnRfdW5pdFwiPjwvYT4iOw0KICAgICAgICAkR0xPQkFMU1snY2hhbmd5YW5fY291bnRfanMnXSA9IFRSVUU7DQogICAgfQ0KICAgICRzZW9faHRtbCA9IGNoYW5neWFuX3Nlb19jb21tZW50KCRjbGllbnRfaWQsICRyZWZPYmotPkFyY0lEKTsNCiAgICByZXR1cm4gJHJldmFsLiRzZW9faHRtbDsNCn0NCmZ1bmN0aW9uIGNoYW5neWFuX3Nlb19jb21tZW50KCRjbGllbnRfaWQsICRzaWQsICR1cmw9bnVsbCkNCnsNCiAgICAkaHRtbCA9ICcnOw0KICAgICRjb250ZW50cyA9ICcnOw0KICAgICRoZWFkID0gPDw8RU9UDQoNCjxkaXYgaWQ9ImNoYW5neWFuLWNvbW1lbnRzIiBzdHlsZT0iZGlzcGxheTpub25lIj4NCiAgICA8b2wgaWQ9ImNvbW1lbnRzLWxpc3QiPg0KRU9UOw0KICAgICRmb290ZXIgPSA8PDxFT1QNCiAgICA8L29sPg0KPC9kaXY+DQpFT1Q7DQogICAgJHRvcGljX2luZm8gPSBjaGFuZ3lhbl9nZXRfdG9waWNfY29tbWVudHMoJGNsaWVudF9pZCwgJHNpZCwgJHVybCk7DQogICAgaWYoZW1wdHkoJHRvcGljX2luZm9bJ2Vycm9yX2NvZGUnXSkgJiYgIWVtcHR5KCR0b3BpY19pbmZvWyd0b3BpY19pZCddKSkgew0KICAgICAgICAkY29tbWVudHNfaW5mbyA9IGNoYW5neWFuX2dldF9jb21tZW50cygkY2xpZW50X2lkLCAkdG9waWNfaW5mb1sndG9waWNfaWQnXSk7DQogICAgICAgIGlmKGVtcHR5KCRjb21tZW50c19pbmZvWydlcnJvcl9jb2RlJ10pICYmICFlbXB0eSgkY29tbWVudHNfaW5mb1snY29tbWVudHMnXSkpIHsNCiAgICAgICAgICAgICRjb21tZW50cyA9ICRjb21tZW50c19pbmZvWydjb21tZW50cyddOw0KICAgICAgICAgICAgZm9yZWFjaCggJGNvbW1lbnRzIGFzICRjb21tZW50ICkgew0KICAgICAgICAgICAgICAgICRjb250ZW50cyAuPSAnDQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbW1lbnQiPicuaWNvbnYoIlVURi04IiwiR0IyMzEyIiwkY29tbWVudFsncGFzc3BvcnQnXVsnbmlja25hbWUnXSkuJyDLtTogJzsNCiAgICAgICAgICAgICAgICAkY29udGVudHMuPSBpY29udigiVVRGLTgiLCJHQjIzMTIiLCRjb21tZW50Wydjb250ZW50J10pLicNCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+JzsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0gZWxzZSB7DQogICAgICAgICRjb250ZW50cyA9ICK78cihxsDC28qnsNwiOw0KICAgIH0NCiAgICAkaHRtbCA9ICRoZWFkLiRjb250ZW50cy4kZm9vdGVyOw0KICAgIHJldHVybiAkaHRtbDsNCn0NCg==
</file>
</modulefiles>
</module>
